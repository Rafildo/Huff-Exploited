typedef struct Stack_Node {
    char data;
    struct Stack_Node *prev, *next;
} Stack_Node;

typedef struct Stack {
    struct Stack_Node *head, *tail;
    int size;
} Stack;

Stack_Node* Create_Node(char data) {
    Stack_Node *new_node = (Stack_Node*) malloc(sizeof(Stack_Node));
    new_node->prev = new_node->next = NULL;
    new_node->data = data;
    return new_node;
}

Stack* Create_Stack() {
    Stack* new_stack = (Stack*) malloc(sizeof(Stack));
    new_stack->head = new_stack->tail = NULL;
    new_stack->size = 0;
    return new_stack;
}

void Insert_Stack(Stack *stack, char data) {
    if(stack->head == NULL) {
        stack->head = Create_Node(data);
        stack->tail = stack->head;
    } else {
        stack->tail->next = Create_Node(data);
        stack->tail->next->prev = stack->tail;
        stack->tail = stack->tail->next;
    }
    return;
}

void Pop_Stack(Stack *stack, char data) {
    if(stack->head != NULL) {
        Stack_Node *new_node = stack->tail;
        stack->tail = stack->tail->prev;
        stack->tail->next = NULL;
        free(new_node);
    }
    return;
}



