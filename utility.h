#ifndef UTILITY.H
#define UTILITY.H

void backtrack(node *head,queue *fila)
{
	if (head->left != NULL && head->right != NULL)
	{
		enqueue(fila,'0');
		backtrack(head->left,fila,ht);
		dequeue(fila);
		enqueue(fila,'1');
		backtrack(head->right,fila,ht);
		dequeue(fila);
	}
	else if (head->left == NULL && head->right == NULL)
	{
		//printf("%c ",head->item);
		//print_queue(fila);
		node *temp = fila->front;
		queue *nova = create_queue();
		while(temp != NULL)
		{
			enqueue(nova,temp->item);
			temp = temp->next;
		}
		put(ht,head->item,nova);
	}
}

unsigned char set_bit(unsigned char byte, FILE *file, int position, hash_table *ht)
{
	unsigned char aux = 0;
	hn *temp = ht->table[(int)fgetc(file)];
	node *temp2 = temp->fila->front;
	while(temp2 != NULL)
	{
		if (temp2->item == '1')
		{
			aux = 1 << position;
		}
		temp2 = temp2->next;
	}
	return aux | byte ;
}
